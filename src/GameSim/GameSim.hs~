module Game.Simulation
  (
    runGame
  , runGameIO
  , recordGame
  , recordGameIO
  )
where

import Data.Vec2
import CSB.Param
import CSB.Game.State
import Player.IO
import Player

data Gamelog p1 p2 =  (GameState p1 p2) TurnOutput  

runGame ::(Player p1, p2) => GameSpec -> (GameState p1 p2 -> Bool) -> [GameState]
runGameIO :: (PlayerIO p1 , p2) => GameSpec -> (GameState p1 p2 -> Bool) -> [GameState]
recordGame :: (Player p2 , p2) => GameSpec -> (GameLog p1 p2 -> IO Bool) -> IO()
recordGameIO :: (PlayerIO p2 , p2) => GameSpec -> (GameLog p1 p2 -> IO Bool) -> IO()
